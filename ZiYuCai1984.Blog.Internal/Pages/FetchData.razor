@page "/fetchdata"

@inherits DisposableComponent

@inject ISampleData SampleData
@inject IMapper Mapper

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<table class="table">
    <thead>
    <tr>
        <th>City(@Forecasts.Count)</th>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var forecast in Forecasts)
    {
        <tr>
            <td>@forecast.City</td>
            <td>@forecast.Date</td>
            <td>@forecast.TemperatureC</td>
            <td>@(32 + (int) (forecast.TemperatureC / 0.5556))</td>
            <td>@forecast.Summary</td>
        </tr>
    }
    </tbody>
</table>

@code {
    private IList<WeatherForecast> Forecasts { get; } = new List<WeatherForecast>();

    protected override void OnInitialized()
    {
#pragma warning disable 4014
        Task.Run(async () =>
        {
            while (!IsDisposed)
            {
                try
                {
                    var forecasts = new List<WeatherForecast>(await SampleData.GetWeatherForecasts());
                    Mapper.Map(forecasts, Forecasts);
                    InvokeAsync(StateHasChanged);

                    await Task.Delay(2000);
                }
                catch
                {
                    //ignore
                }
            }
        });
    }

}